apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lock-unlock-rewrite.fullname" . }}
  labels:
    {{- include "lock-unlock-rewrite.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lock-unlock-rewrite.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lock-unlock-rewrite.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lock-unlock-rewrite.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.dataloader.enabled }}
      initContainers:
        - name: "{{ .Chart.Name }}-dataloader"
          image: "{{ .Values.dataloader.image.repository }}:{{ .Values.dataloader.image.tag }}"
          imagePullPolicy: {{ .Values.dataloader.image.pullPolicy }}
          args:
            - ./prep_tdb2.sh
          env:
            - name: FILE_URL
              value: "{{ .Values.dataloader.dataset.file_url }}"
          volumeMounts:
            - name: database
              mountPath: /database
          resources:
            {{- toYaml .Values.dataloader.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [ "--tdb2", "--loc", "/database", "{{ .Values.dataloader.dataset.endpoint }}" ]
          env:
            - name: FUSEKI_BASE
              value: /run
            - name: JAVA_OPTIONS
              value: "{{ .Values.image.javaOptions }}"
          ports:
            - name: http
              containerPort: 3030
              protocol: TCP
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: database
              mountPath: /database
            - name: fuseki-base
              mountPath: /run
          resources:
            {{- toYaml .Values.image.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: database
          emptyDir: {}
        - name: logs
          emptyDir: {}
        - name: fuseki-base
          emptyDir: {}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
